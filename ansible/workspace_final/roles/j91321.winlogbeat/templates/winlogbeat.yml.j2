# Ansible managed
#======================= Winlogbeat specific options ===========================
winlogbeat.event_logs:
{% for channel in winlogbeat_event_logs.channels %}
  - name: {{ channel.name }}
    ignore_older: {{ channel.ignore_older | default('72h') }}
{% endfor %}

{% if winlogbeat_event_logs.security | bool %}
  - name: Security
    ignore_older: 72h
    processors:
      - script:
          lang: javascript
          id: security
          file: ${path.home}/module/security/config/winlogbeat-security.js
{% if winlogbeat_event_logs.security_processors is defined %}
{{ winlogbeat_event_logs.security_processors | indent( width=6, first=True) }}
{% endif %}
{% endif %}

{% if winlogbeat_event_logs.sysmon | bool %}
  - name: Microsoft-Windows-Sysmon/Operational
    processors:
      - script:
          lang: javascript
          id: sysmon
          file: ${path.home}/module/sysmon/config/winlogbeat-sysmon.js
{% if winlogbeat_event_logs.sysmon_processors is defined %}
{{ winlogbeat_event_logs.sysmon_processors | indent( width=6, first=True) }}
{% endif %}
{% endif %}

{% if winlogbeat_event_logs.powershell | bool %}
  - name: Windows PowerShell
    event_id: 400, 403, 600, 800
    processors:
      - script:
          lang: javascript
          id: powershell
          file: ${path.home}/module/powershell/config/winlogbeat-powershell.js
{% if winlogbeat_event_logs.powershell_basic_processors is defined %}
{{ winlogbeat_event_logs.powershell_basic_processors | indent( width=6, first=True) }}
{% endif %}

  - name: Microsoft-Windows-PowerShell/Operational
    event_id: 4103, 4104, 4105, 4106
    processors:
      - script:
          lang: javascript
          id: powershell
          file: ${path.home}/module/powershell/config/winlogbeat-powershell.js
{% if winlogbeat_event_logs.powershell_block_processors is defined %}
{{ winlogbeat_event_logs.powershell_block_processors | indent( width=6, first=True) }}
{% endif %}
{% endif %}

{% if winlogbeat_event_logs.wef | bool %}
  - name: ForwardedEvents
    tags: [forwarded]
    processors:
      - script:
          when.equals.winlog.channel: Security
          lang: javascript
          id: security
          file: ${path.home}/module/security/config/winlogbeat-security.js
      - script:
          when.equals.winlog.channel: Microsoft-Windows-Sysmon/Operational
          lang: javascript
          id: sysmon
          file: ${path.home}/module/sysmon/config/winlogbeat-sysmon.js
      - script:
          when.equals.winlog.channel: Windows PowerShell
          lang: javascript
          id: powershell
          file: ${path.home}/module/powershell/config/winlogbeat-powershell.js
      - script:
          lang: javascript
          id: powershell
          file: ${path.home}/module/powershell/config/winlogbeat-powershell.js
{% if winlogbeat_event_logs.wef_processors is defined %}
{{ winlogbeat_event_logs.wef_processors | indent( width=6, first=True) }}
{% endif %}
{% endif %}

#==================== Elasticsearch template settings ==========================

setup.template.enabled: {{ winlogbeat_template.enabled | default(true) }}
setup.template.settings:
  index.number_of_shards: {{ winlogbeat_template.number_of_shards | default(1) }}


#================================ General =====================================

{% if winlogbeat_general.tags is defined %}
tags: {{ winlogbeat_general.tags | to_json }}
{% endif %}


{% if winlogbeat_cloud is defined %}
#============================= Elastic Cloud ==================================

# These settings simplify using Winlogbeat with the Elastic Cloud (https://cloud.elastic.co/).

# The cloud.id setting overwrites the `output.elasticsearch.hosts` and
# `setup.kibana.host` options.
# You can find the `cloud.id` in the Elastic Cloud web UI.
cloud.id: {{ winlogbeat_cloud.id }}

# The cloud.auth setting overwrites the `output.elasticsearch.username` and
# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
cloud.auth: {{ winlogbeat_cloud.auth }}
{% endif %}

{% if winlogbeat_ilm is defined %}
#=================================== ILM ======================================
setup.ilm.enabled: {{ winlogbeat_ilm.enabled | default("auto") }}
{% if winlogbeat_ilm.enabled != "false" %} 
setup.ilm.rollover_alias: {{ winlogbeat_ilm.rollover_alias | default("winlogbeat-%{[agent.version]}") }}
setup.ilm.pattern: {{ winlogbeat_ilm.pattern | default("%{now/d}-000001") }}
setup.ilm.policy_name: {{ winlogbeat_ilm.policy_name | default("winlogbeat-%{[agent.version]}") }}
setup.ilm.check_exists: {{ winlogbeat_ilm.check_exists | default(true) }}
{% endif %}
{% endif %}

#================================ Outputs =====================================

# Configure what output to use when sending the data collected by the beat.

{% if winlogbeat_output.type == "elasticsearch" %}
#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: {{ winlogbeat_output.elasticsearch.hosts | to_json }}

{% if winlogbeat_output.elasticsearch.security.enabled | bool %}
  # Optional protocol and basic auth credentials.
  username: {{ winlogbeat_output.elasticsearch.security.username }}
  password: {{ winlogbeat_output.elasticsearch.security.password }}
  protocol: {{ winlogbeat_output.elasticsearch.security.protocol }}
{% if winlogbeat_output.elasticsearch.security.ssl_certificate_authorities is defined %}
  ssl.certificate_authorities: {{ winlogbeat_output.elasticsearch.security.ssl_certificate_authorities | to_json }}
{% endif %}
{% if 'https' == winlogbeat_output.elasticsearch.security.protocol  %}
  ssl.verification_mode: {{ winlogbeat_output.elasticsearch.security.ssl_verification_mode | default("full") }}
{% endif %}
{% endif %}
{% endif %}
{% if winlogbeat_output.type == "logstash" %}
#----------------------------- Logstash output --------------------------------
output.logstash:
  # The Logstash hosts
  hosts: {{ winlogbeat_output.logstash.hosts | to_json }}

{% if winlogbeat_output.logstash.security.ssl_certificate_authorities is defined %}}
  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  ssl.certificate_authorities: {{ winlogbeat_output.logstash.security.ssl_certificate_authorities | to_json }}
{% endif %}
{% endif %}
{% if winlogbeat_output.type == "redis" %}
#------------------------------ Redis output ---------------------------------
output.redis:
  hosts: {{ winlogbeat_output.redis.hosts | to_json }}
{% if winlogbeat_output.redis.password is defined %}
  password: {{ winlogbeat_output.redis.password }}
{% endif %}
  key: {{ winlogbeat_output.redis.key }}
{% if winlogbeat_output.redis.timeout is defined %}
  timeout: {{ winlogbeat_output.redis.timeout }}
{% endif %}
{% endif %}

#================================ Processors =====================================

# Configure processors to enhance or manipulate events generated by the beat.

{% if winlogbeat_processors is defined %}
processors:
{{ winlogbeat_processors | indent( width=2, first=True) }}
{% endif %}
#================================ Logging =====================================

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]

#============================== X-Pack Monitoring ===============================
# winlogbeat can export internal metrics to a central Elasticsearch monitoring
# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The
# reporting is disabled by default.

# Set to true to enable the monitoring reporter.
#monitoring.enabled: false

# Sets the UUID of the Elasticsearch cluster under which monitoring data for this
# Winlogbeat instance will appear in the Stack Monitoring UI. If output.elasticsearch
# is enabled, the UUID is derived from the Elasticsearch cluster referenced by output.elasticsearch.
#monitoring.cluster_uuid:

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well.
# Note that the settings should point to your Elasticsearch *monitoring* cluster.
# Any setting that is not set is automatically inherited from the Elasticsearch
# output configuration, so if you have the Elasticsearch output configured such
# that it is pointing to your Elasticsearch monitoring cluster, you can simply
# uncomment the following line.
#monitoring.elasticsearch:

{% if winlogbeat_migration is defined %}
#================================= Migration ==================================

# This allows to enable 6.7 migration aliases
migration.6_to_7.enabled: {{ winlogbeat_migration }}
{% endif %}
